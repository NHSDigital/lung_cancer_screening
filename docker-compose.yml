---

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
    volumes:
      - ./:/app
      - venv:/app/.venv
      - playwright_browsers:/app/browsers
    restart: unless-stopped

  asset_builder:
    build:
      context: .
      dockerfile: Dockerfile
      target: asset_builder
    command: npm run watch
    volumes:
      - ./lung_cancer_screening/assets/compiled:/app/lung_cancer_screening/assets/compiled

  db:
    image: postgres:15-alpine
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis_data:
  venv:
  playwright_browsers:
